@model Entidades.ClienteContacto

@{
    string _ControllerName = "Clientes";

    Entidades.App.Token oToken = Filters.VerificarToken.ConsultarToken();
}

<div id="modalFormDefault" class="modal fade modalFormABM" tabindex="-1" role="dialog" aria-labelledby="formModalABM" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel3">
                    @(Model.clicont_id.Equals(0) ? "Alta de Contacto " : "Modificar Contacto")
                </h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i data-feather="x"></i></span>
                </button>
            </div>
            @using (Html.BeginForm("SaveModalClientesContactos", _ControllerName, FormMethod.Post, new { id = "formABMDefault", name = "formABMDefault", @class = "formularioABMModal", refreshDatatable = "true", resetForm = "true", closeForm = "true" }))
            {
        <div class="modal-body">
            @Html.HiddenFor(x => x.clicont_id)
            @Html.HiddenFor(x => x.IdEncriptado)
            @Html.HiddenFor(x => x.Cliente.IdEncriptado)
            @Html.HiddenFor(x => x.Cliente.cli_id)



            <div class="row mt-2">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.clicont_contenido, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.clicont_contenido, new { htmlAttributes = new { @class = "form-control form-control-sm", required = "required", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.clicont_contenido, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mt-2">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Tipo, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Tipo.tipcontcli_id, new SelectList(Negocio.DDL.ListarTipoDeContactoClientes(Filters.VerificarToken.ConsultarToken()), "Value", "Text"), new { @class = "form-control camporequerido input-sm select2Modal", required = "required" })
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.clicont_detalle, htmlAttributes: new { @class = "control-label" })
                    <textarea class="form-control" rows="5" placeholder="" required autocomplete="off" name="@Html.NameFor(model=>model.clicont_detalle)" id="@Html.NameFor(model=>model.clicont_detalle)">@Model.clicont_detalle</textarea>
                    @Html.ValidationMessageFor(model => model.clicont_detalle, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-cerrar btn-app" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success pull-left btn-app"> <i class="fa fa-save"></i> Guardar</button>
                </div>
            }
        </div>
    </div>
</div>


<script>

</script>