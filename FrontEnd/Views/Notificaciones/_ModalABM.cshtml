@model Entidades.Notificacion

@{
    string _ControllerName = "Notificaciones";

    Entidades.App.Token oToken = Filters.VerificarToken.ConsultarToken();
}


<div id="modalFormDefault" class="modal fade modalFormABM" tabindex="-1" role="dialog" aria-labelledby="formModalABM" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel3">
                    @(Model.not_id.Equals(0) ? "Alta de Notificacion" : "Modificar datos de la notificación")
                </h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i data-feather="x"></i></span>
                </button>
            </div>
            @using (Html.BeginForm("SaveModal", _ControllerName, FormMethod.Post, new { id = "formABMDefault", name = "formABMDefault", @class = "formularioABMModal", refreshDatatable = "true", resetForm = "true", closeForm = "true" }))
            {
                <div class="modal-body">
                    @Html.HiddenFor(x => x.not_id)

                    @*<div class="row">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.Distrito, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.Distrito.dis_id, new SelectList(Negocio.DDL.ListarDistritos(oToken, true), "Value", "Text"), new { @class = "form-control camporequerido input-sm select2Modal", required = "required" })
                        </div>
                    </div>

                    <div class="row mt-md">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.not_texto, htmlAttributes: new { @class = "control-label" })
                            <textarea class="form-control" rows="5" placeholder="" required autocomplete="off" name="@Html.NameFor(model=>model.not_texto)" id="@Html.NameFor(model=>model.not_texto)">@Model.not_texto</textarea>
                            @Html.ValidationMessageFor(model => model.not_texto, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-cerrar btn-app" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success pull-left btn-app"> <i class="fa fa-save"></i> Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

<script>

    function resetForm() {

    }


</script>