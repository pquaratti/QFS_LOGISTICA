@model Entidades.Tutorial

@{
    string _controllerName = "Tutoriales";

}

<div id="modalFormDefault" class="modal fade modalFormABM" tabindex="-1" role="dialog" aria-labelledby="formModalABM" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel3">
                    @(Model.tut_id.Equals(0) ? "Crear Tutorial" : "Modificar Tutorial")
                </h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i data-feather="x"></i></span>
                </button>
            </div>
            @using (Html.BeginForm("SaveModal", _controllerName, FormMethod.Post, new { id = "formABMDefault", name = "formABMDefault", @class = "formularioABMModalFiles", refreshDatatable = "true", resetForm = "false", closeForm = "true" }))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.tut_id)

                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.tut_titulo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.tut_titulo, new { htmlAttributes = new { @class = "form-control form-control-sm", required = "required", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.tut_titulo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Accion, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Accion.acc_id, new SelectList(Negocio.DDL.ListarAccionesPadre(Filters.VerificarToken.ConsultarToken()), "Value", "Text"), new { @class = "form-control camporequerido input-sm select2Modal", required = "required" })
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.tut_icono, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.tut_icono, new SelectList(Negocio.DDL.ListarIconos(), "Value", "Text"), new { @class = "form-control FontAwesome camporequerido input-sm select2Modal", required = "required" })
                        </div>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-12">
                            <input id="fileUpload" type="file" class="upload" title="Haz click aquí para buscar tu plantilla" />
                        </div>
                    </div>

                    <div class="row mt-2">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.tut_descrip, htmlAttributes: new { @class = "control-label" })
                            <textarea class="form-control" rows="5" placeholder="" required autocomplete="off" name="@Html.NameFor(model=>model.tut_descrip)" id="@Html.NameFor(model=>model.tut_descrip)">@Model.tut_descrip</textarea>
                            @Html.ValidationMessageFor(model => model.tut_descrip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-cerrar btn-app" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success pull-left btn-app"> <i class="fa fa-save"></i> Guardar</button>
                </div>
            }
        </div>
    </div>
</div>

<script>

</script>
